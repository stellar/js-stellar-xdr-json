name: Rust

on:
  push:
    branches: [main, release/**]
  pull_request:
  merge_group:

defaults:
  run:
    shell: bash

env:
  RUSTFLAGS: -Dwarnings

jobs:

  complete:
    if: always()
    needs: [fmt, check-git-rev-deps, build-and-test]
    runs-on: ubuntu-latest
    steps:
    - if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
      run: exit 1

  fmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - run: rustup update
    - run: cargo fmt --all --check

  cargo-deny:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        checks:
          - advisories
          - bans licenses sources
    # Prevent sudden announcement of a new advisory from failing ci:
    continue-on-error: ${{ matrix.checks == 'advisories' }}
    steps:
    - uses: actions/checkout@v4
    - uses: EmbarkStudios/cargo-deny-action@2d8c9929d8f9f42bedba73f1287cb0b479f07acb
      with:
        command: check ${{ matrix.checks }}

  check-git-rev-deps:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: stellar/actions/rust-check-git-rev-deps@main

  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: stellar/actions/rust-cache@main
    - uses: stellar/binaries@v32
      with:
        name: wasm-pack
        version: 0.13.0
    - uses: stellar/binaries@v32
      with:
        name: wasm-bindgen-cli
        version: 0.2.92
    - run: echo RUSTFLAGS='-Dwarnings' >> $GITHUB_ENV
    - run: rustup update
    - run: cargo version
    - run: rustup target add wasm32-unknown-unknown
    - run: make build
    - uses: actions/upload-artifact@v4
      with:
        path: pkg
    - run: make test
    - run: git add -N . && git diff HEAD --exit-code
