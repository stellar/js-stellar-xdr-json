//! Test suite for the Web and headless browsers.

#[cfg(target_arch = "wasm32")]
extern crate wasm_bindgen_test;
#[cfg(target_arch = "wasm32")]
use wasm_bindgen_test::*;

#[cfg(target_arch = "wasm32")]
wasm_bindgen_test_configure!(run_in_browser);

#[cfg_attr(target_arch = "wasm32", wasm_bindgen_test)]
#[test]
fn pass() {
    assert_eq!(
        stellar_xdr_json::types(),
        &[
            "Value",
            "ScpBallot",
            "ScpStatementType",
            "ScpNomination",
            "ScpStatement",
            "ScpStatementPledges",
            "ScpStatementPrepare",
            "ScpStatementConfirm",
            "ScpStatementExternalize",
            "ScpEnvelope",
            "ScpQuorumSet",
            "ConfigSettingContractExecutionLanesV0",
            "ConfigSettingContractComputeV0",
            "ConfigSettingContractLedgerCostV0",
            "ConfigSettingContractHistoricalDataV0",
            "ConfigSettingContractEventsV0",
            "ConfigSettingContractBandwidthV0",
            "ContractCostType",
            "ContractCostParamEntry",
            "StateArchivalSettings",
            "EvictionIterator",
            "ContractCostParams",
            "ConfigSettingId",
            "ConfigSettingEntry",
            "ScEnvMetaKind",
            "ScEnvMetaEntry",
            "ScEnvMetaEntryInterfaceVersion",
            "ScMetaV0",
            "ScMetaKind",
            "ScMetaEntry",
            "ScSpecType",
            "ScSpecTypeOption",
            "ScSpecTypeResult",
            "ScSpecTypeVec",
            "ScSpecTypeMap",
            "ScSpecTypeTuple",
            "ScSpecTypeBytesN",
            "ScSpecTypeUdt",
            "ScSpecTypeDef",
            "ScSpecUdtStructFieldV0",
            "ScSpecUdtStructV0",
            "ScSpecUdtUnionCaseVoidV0",
            "ScSpecUdtUnionCaseTupleV0",
            "ScSpecUdtUnionCaseV0Kind",
            "ScSpecUdtUnionCaseV0",
            "ScSpecUdtUnionV0",
            "ScSpecUdtEnumCaseV0",
            "ScSpecUdtEnumV0",
            "ScSpecUdtErrorEnumCaseV0",
            "ScSpecUdtErrorEnumV0",
            "ScSpecFunctionInputV0",
            "ScSpecFunctionV0",
            "ScSpecEntryKind",
            "ScSpecEntry",
            "ScValType",
            "ScErrorType",
            "ScErrorCode",
            "ScError",
            "UInt128Parts",
            "Int128Parts",
            "UInt256Parts",
            "Int256Parts",
            "ContractExecutableType",
            "ContractExecutable",
            "ScAddressType",
            "ScAddress",
            "ScVec",
            "ScMap",
            "ScBytes",
            "ScString",
            "ScSymbol",
            "ScNonceKey",
            "ScContractInstance",
            "ScVal",
            "ScMapEntry",
            "StoredTransactionSet",
            "StoredDebugTransactionSet",
            "PersistedScpStateV0",
            "PersistedScpStateV1",
            "PersistedScpState",
            "Thresholds",
            "String32",
            "String64",
            "SequenceNumber",
            "DataValue",
            "PoolId",
            "AssetCode4",
            "AssetCode12",
            "AssetType",
            "AssetCode",
            "AlphaNum4",
            "AlphaNum12",
            "Asset",
            "Price",
            "Liabilities",
            "ThresholdIndexes",
            "LedgerEntryType",
            "Signer",
            "AccountFlags",
            "SponsorshipDescriptor",
            "AccountEntryExtensionV3",
            "AccountEntryExtensionV2",
            "AccountEntryExtensionV2Ext",
            "AccountEntryExtensionV1",
            "AccountEntryExtensionV1Ext",
            "AccountEntry",
            "AccountEntryExt",
            "TrustLineFlags",
            "LiquidityPoolType",
            "TrustLineAsset",
            "TrustLineEntryExtensionV2",
            "TrustLineEntryExtensionV2Ext",
            "TrustLineEntry",
            "TrustLineEntryExt",
            "TrustLineEntryV1",
            "TrustLineEntryV1Ext",
            "OfferEntryFlags",
            "OfferEntry",
            "OfferEntryExt",
            "DataEntry",
            "DataEntryExt",
            "ClaimPredicateType",
            "ClaimPredicate",
            "ClaimantType",
            "Claimant",
            "ClaimantV0",
            "ClaimableBalanceIdType",
            "ClaimableBalanceId",
            "ClaimableBalanceFlags",
            "ClaimableBalanceEntryExtensionV1",
            "ClaimableBalanceEntryExtensionV1Ext",
            "ClaimableBalanceEntry",
            "ClaimableBalanceEntryExt",
            "LiquidityPoolConstantProductParameters",
            "LiquidityPoolEntry",
            "LiquidityPoolEntryBody",
            "LiquidityPoolEntryConstantProduct",
            "ContractDataDurability",
            "ContractDataEntry",
            "ContractCodeCostInputs",
            "ContractCodeEntry",
            "ContractCodeEntryExt",
            "ContractCodeEntryV1",
            "TtlEntry",
            "LedgerEntryExtensionV1",
            "LedgerEntryExtensionV1Ext",
            "LedgerEntry",
            "LedgerEntryData",
            "LedgerEntryExt",
            "LedgerKey",
            "LedgerKeyAccount",
            "LedgerKeyTrustLine",
            "LedgerKeyOffer",
            "LedgerKeyData",
            "LedgerKeyClaimableBalance",
            "LedgerKeyLiquidityPool",
            "LedgerKeyContractData",
            "LedgerKeyContractCode",
            "LedgerKeyConfigSetting",
            "LedgerKeyTtl",
            "EnvelopeType",
            "BucketListType",
            "BucketEntryType",
            "HotArchiveBucketEntryType",
            "ColdArchiveBucketEntryType",
            "BucketMetadata",
            "BucketMetadataExt",
            "BucketEntry",
            "HotArchiveBucketEntry",
            "ColdArchiveArchivedLeaf",
            "ColdArchiveDeletedLeaf",
            "ColdArchiveBoundaryLeaf",
            "ColdArchiveHashEntry",
            "ColdArchiveBucketEntry",
            "UpgradeType",
            "StellarValueType",
            "LedgerCloseValueSignature",
            "StellarValue",
            "StellarValueExt",
            "LedgerHeaderFlags",
            "LedgerHeaderExtensionV1",
            "LedgerHeaderExtensionV1Ext",
            "LedgerHeader",
            "LedgerHeaderExt",
            "LedgerUpgradeType",
            "ConfigUpgradeSetKey",
            "LedgerUpgrade",
            "ConfigUpgradeSet",
            "TxSetComponentType",
            "TxSetComponent",
            "TxSetComponentTxsMaybeDiscountedFee",
            "TransactionPhase",
            "TransactionSet",
            "TransactionSetV1",
            "GeneralizedTransactionSet",
            "TransactionResultPair",
            "TransactionResultSet",
            "TransactionHistoryEntry",
            "TransactionHistoryEntryExt",
            "TransactionHistoryResultEntry",
            "TransactionHistoryResultEntryExt",
            "LedgerHeaderHistoryEntry",
            "LedgerHeaderHistoryEntryExt",
            "LedgerScpMessages",
            "ScpHistoryEntryV0",
            "ScpHistoryEntry",
            "LedgerEntryChangeType",
            "LedgerEntryChange",
            "LedgerEntryChanges",
            "OperationMeta",
            "TransactionMetaV1",
            "TransactionMetaV2",
            "ContractEventType",
            "ContractEvent",
            "ContractEventBody",
            "ContractEventV0",
            "DiagnosticEvent",
            "DiagnosticEvents",
            "SorobanTransactionMetaExtV1",
            "SorobanTransactionMetaExt",
            "SorobanTransactionMeta",
            "TransactionMetaV3",
            "InvokeHostFunctionSuccessPreImage",
            "TransactionMeta",
            "TransactionResultMeta",
            "UpgradeEntryMeta",
            "LedgerCloseMetaV0",
            "LedgerCloseMetaExtV1",
            "LedgerCloseMetaExt",
            "LedgerCloseMetaV1",
            "LedgerCloseMeta",
            "ErrorCode",
            "SError",
            "SendMore",
            "SendMoreExtended",
            "AuthCert",
            "Hello",
            "Auth",
            "IpAddrType",
            "PeerAddress",
            "PeerAddressIp",
            "MessageType",
            "DontHave",
            "SurveyMessageCommandType",
            "SurveyMessageResponseType",
            "TimeSlicedSurveyStartCollectingMessage",
            "SignedTimeSlicedSurveyStartCollectingMessage",
            "TimeSlicedSurveyStopCollectingMessage",
            "SignedTimeSlicedSurveyStopCollectingMessage",
            "SurveyRequestMessage",
            "TimeSlicedSurveyRequestMessage",
            "SignedSurveyRequestMessage",
            "SignedTimeSlicedSurveyRequestMessage",
            "EncryptedBody",
            "SurveyResponseMessage",
            "TimeSlicedSurveyResponseMessage",
            "SignedSurveyResponseMessage",
            "SignedTimeSlicedSurveyResponseMessage",
            "PeerStats",
            "PeerStatList",
            "TimeSlicedNodeData",
            "TimeSlicedPeerData",
            "TimeSlicedPeerDataList",
            "TopologyResponseBodyV0",
            "TopologyResponseBodyV1",
            "TopologyResponseBodyV2",
            "SurveyResponseBody",
            "TxAdvertVector",
            "FloodAdvert",
            "TxDemandVector",
            "FloodDemand",
            "StellarMessage",
            "AuthenticatedMessage",
            "AuthenticatedMessageV0",
            "LiquidityPoolParameters",
            "MuxedAccount",
            "MuxedAccountMed25519",
            "DecoratedSignature",
            "OperationType",
            "CreateAccountOp",
            "PaymentOp",
            "PathPaymentStrictReceiveOp",
            "PathPaymentStrictSendOp",
            "ManageSellOfferOp",
            "ManageBuyOfferOp",
            "CreatePassiveSellOfferOp",
            "SetOptionsOp",
            "ChangeTrustAsset",
            "ChangeTrustOp",
            "AllowTrustOp",
            "ManageDataOp",
            "BumpSequenceOp",
            "CreateClaimableBalanceOp",
            "ClaimClaimableBalanceOp",
            "BeginSponsoringFutureReservesOp",
            "RevokeSponsorshipType",
            "RevokeSponsorshipOp",
            "RevokeSponsorshipOpSigner",
            "ClawbackOp",
            "ClawbackClaimableBalanceOp",
            "SetTrustLineFlagsOp",
            "LiquidityPoolDepositOp",
            "LiquidityPoolWithdrawOp",
            "HostFunctionType",
            "ContractIdPreimageType",
            "ContractIdPreimage",
            "ContractIdPreimageFromAddress",
            "CreateContractArgs",
            "CreateContractArgsV2",
            "InvokeContractArgs",
            "HostFunction",
            "SorobanAuthorizedFunctionType",
            "SorobanAuthorizedFunction",
            "SorobanAuthorizedInvocation",
            "SorobanAddressCredentials",
            "SorobanCredentialsType",
            "SorobanCredentials",
            "SorobanAuthorizationEntry",
            "InvokeHostFunctionOp",
            "ExtendFootprintTtlOp",
            "RestoreFootprintOp",
            "Operation",
            "OperationBody",
            "HashIdPreimage",
            "HashIdPreimageOperationId",
            "HashIdPreimageRevokeId",
            "HashIdPreimageContractId",
            "HashIdPreimageSorobanAuthorization",
            "MemoType",
            "Memo",
            "TimeBounds",
            "LedgerBounds",
            "PreconditionsV2",
            "PreconditionType",
            "Preconditions",
            "LedgerFootprint",
            "ArchivalProofType",
            "ArchivalProofNode",
            "ProofLevel",
            "NonexistenceProofBody",
            "ExistenceProofBody",
            "ArchivalProof",
            "ArchivalProofBody",
            "SorobanResources",
            "SorobanTransactionData",
            "TransactionV0",
            "TransactionV0Ext",
            "TransactionV0Envelope",
            "Transaction",
            "TransactionExt",
            "TransactionV1Envelope",
            "FeeBumpTransaction",
            "FeeBumpTransactionInnerTx",
            "FeeBumpTransactionExt",
            "FeeBumpTransactionEnvelope",
            "TransactionEnvelope",
            "TransactionSignaturePayload",
            "TransactionSignaturePayloadTaggedTransaction",
            "ClaimAtomType",
            "ClaimOfferAtomV0",
            "ClaimOfferAtom",
            "ClaimLiquidityAtom",
            "ClaimAtom",
            "CreateAccountResultCode",
            "CreateAccountResult",
            "PaymentResultCode",
            "PaymentResult",
            "PathPaymentStrictReceiveResultCode",
            "SimplePaymentResult",
            "PathPaymentStrictReceiveResult",
            "PathPaymentStrictReceiveResultSuccess",
            "PathPaymentStrictSendResultCode",
            "PathPaymentStrictSendResult",
            "PathPaymentStrictSendResultSuccess",
            "ManageSellOfferResultCode",
            "ManageOfferEffect",
            "ManageOfferSuccessResult",
            "ManageOfferSuccessResultOffer",
            "ManageSellOfferResult",
            "ManageBuyOfferResultCode",
            "ManageBuyOfferResult",
            "SetOptionsResultCode",
            "SetOptionsResult",
            "ChangeTrustResultCode",
            "ChangeTrustResult",
            "AllowTrustResultCode",
            "AllowTrustResult",
            "AccountMergeResultCode",
            "AccountMergeResult",
            "InflationResultCode",
            "InflationPayout",
            "InflationResult",
            "ManageDataResultCode",
            "ManageDataResult",
            "BumpSequenceResultCode",
            "BumpSequenceResult",
            "CreateClaimableBalanceResultCode",
            "CreateClaimableBalanceResult",
            "ClaimClaimableBalanceResultCode",
            "ClaimClaimableBalanceResult",
            "BeginSponsoringFutureReservesResultCode",
            "BeginSponsoringFutureReservesResult",
            "EndSponsoringFutureReservesResultCode",
            "EndSponsoringFutureReservesResult",
            "RevokeSponsorshipResultCode",
            "RevokeSponsorshipResult",
            "ClawbackResultCode",
            "ClawbackResult",
            "ClawbackClaimableBalanceResultCode",
            "ClawbackClaimableBalanceResult",
            "SetTrustLineFlagsResultCode",
            "SetTrustLineFlagsResult",
            "LiquidityPoolDepositResultCode",
            "LiquidityPoolDepositResult",
            "LiquidityPoolWithdrawResultCode",
            "LiquidityPoolWithdrawResult",
            "InvokeHostFunctionResultCode",
            "InvokeHostFunctionResult",
            "ExtendFootprintTtlResultCode",
            "ExtendFootprintTtlResult",
            "RestoreFootprintResultCode",
            "RestoreFootprintResult",
            "OperationResultCode",
            "OperationResult",
            "OperationResultTr",
            "TransactionResultCode",
            "InnerTransactionResult",
            "InnerTransactionResultResult",
            "InnerTransactionResultExt",
            "InnerTransactionResultPair",
            "TransactionResult",
            "TransactionResultResult",
            "TransactionResultExt",
            "Hash",
            "Uint256",
            "Uint32",
            "Int32",
            "Uint64",
            "Int64",
            "TimePoint",
            "Duration",
            "ExtensionPoint",
            "CryptoKeyType",
            "PublicKeyType",
            "SignerKeyType",
            "PublicKey",
            "SignerKey",
            "SignerKeyEd25519SignedPayload",
            "Signature",
            "SignatureHint",
            "NodeId",
            "AccountId",
            "Curve25519Secret",
            "Curve25519Public",
            "HmacSha256Key",
            "HmacSha256Mac",
            "ShortHashSeed",
            "BinaryFuseFilterType",
            "SerializedBinaryFuseFilter"
        ]
    );
}

#[cfg_attr(target_arch = "wasm32", wasm_bindgen_test)]
#[test]
fn decode_success() {
    assert_eq!(
        stellar_xdr_json::decode(
            "TransactionEnvelope".to_string(),
            "AAAAAgAAAADgEZSKvj9N4hWo7xlEDhSTfZRRnmodlACjhT0/BweuyQAAAGUB/G2bAC33IQAAAAEAAAAAAAAAAAAAAABmzOtiAAAAAAAAAAEAAAAAAAAADAAAAAAAAAABVEZDAAAAAADlu40gByuPMTgEkGkhjz5+CDc95FS7T+ywnU7hWCVE1QAAAABpKduDAADRYQCYloAAAAAAXqLzMgAAAAAAAAABBweuyQAAAEC6TCDlbRpjth9ySEI2QiZ2s4CqERXVRvQC45SGPsO16sfQoNwbvBr1C3K9Cu5De/QdPpBQedwArheCWreq2KMJ".to_string(),
        ),
        Ok("{\"tx\":{\"tx\":{\"source_account\":\"GDQBDFEKXY7U3YQVVDXRSRAOCSJX3FCRTZVB3FAAUOCT2PYHA6XMSJZK\",\"fee\":101,\"seq_num\":143109800659384097,\"cond\":{\"time\":{\"min_time\":0,\"max_time\":1724705634}},\"memo\":\"none\",\"operations\":[{\"source_account\":null,\"body\":{\"manage_buy_offer\":{\"selling\":\"native\",\"buying\":{\"credit_alphanum4\":{\"asset_code\":\"TFC\",\"issuer\":\"GDS3XDJAA4VY6MJYASIGSIMPHZ7AQNZ54RKLWT7MWCOU5YKYEVCNLVS3\"}},\"buy_amount\":1764350851,\"price\":{\"n\":53601,\"d\":10000000},\"offer_id\":1587737394}}}],\"ext\":\"v0\"},\"signatures\":[{\"hint\":\"0707aec9\",\"signature\":\"ba4c20e56d1a63b61f72484236422676b380aa1115d546f402e394863ec3b5eac7d0a0dc1bbc1af50b72bd0aee437bf41d3e905079dc00ae17825ab7aad8a309\"}]}}".to_string()),
    );
}

#[cfg_attr(target_arch = "wasm32", wasm_bindgen_test)]
#[test]
fn decode_iter_success() {
    assert_eq!(
        stellar_xdr_json::decode_stream(
            "ScSpecEntry".to_string(),
            "AAAAAAAAAAAAAAAKaW5pdGlhbGl6ZQAAAAAAAwAAAAAAAAAPdG9rZW5fd2FzbV9oYXNoAAAAA+4AAAAgAAAAAAAAAAd0b2tlbl9hAAAAABMAAAAAAAAAB3Rva2VuX2IAAAAAEwAAAAAAAAAAAAAAAAAAAAhzaGFyZV9pZAAAAAAAAAABAAAAEwAAAAAAAAAAAAAAB2RlcG9zaXQAAAAABQAAAAAAAAACdG8AAAAAABMAAAAAAAAACWRlc2lyZWRfYQAAAAAAAAsAAAAAAAAABW1pbl9hAAAAAAAACwAAAAAAAAAJZGVzaXJlZF9iAAAAAAAACwAAAAAAAAAFbWluX2IAAAAAAAALAAAAAAAAAAAAAAAAAAAABHN3YXAAAAAEAAAAAAAAAAJ0bwAAAAAAEwAAAAAAAAAFYnV5X2EAAAAAAAABAAAAAAAAAANvdXQAAAAACwAAAAAAAAAGaW5fbWF4AAAAAAALAAAAAAAAAAAAAAAAAAAACHdpdGhkcmF3AAAABAAAAAAAAAACdG8AAAAAABMAAAAAAAAADHNoYXJlX2Ftb3VudAAAAAsAAAAAAAAABW1pbl9hAAAAAAAACwAAAAAAAAAFbWluX2IAAAAAAAALAAAAAQAAA+0AAAACAAAACwAAAAsAAAAAAAAAAAAAAAlnZXRfcnNydnMAAAAAAAAAAAAAAQAAA+0AAAACAAAACwAAAAs=".to_string(),
        ),
        Ok([r#"{"function_v0":{"doc":"","name":"initialize","inputs":[{"doc":"","name":"token_wasm_hash","type_":{"bytes_n":{"n":32}}},{"doc":"","name":"token_a","type_":"address"},{"doc":"","name":"token_b","type_":"address"}],"outputs":[]}}"#,
            r#"{"function_v0":{"doc":"","name":"share_id","inputs":[],"outputs":["address"]}}"#,
            r#"{"function_v0":{"doc":"","name":"deposit","inputs":[{"doc":"","name":"to","type_":"address"},{"doc":"","name":"desired_a","type_":"i128"},{"doc":"","name":"min_a","type_":"i128"},{"doc":"","name":"desired_b","type_":"i128"},{"doc":"","name":"min_b","type_":"i128"}],"outputs":[]}}"#,
            r#"{"function_v0":{"doc":"","name":"swap","inputs":[{"doc":"","name":"to","type_":"address"},{"doc":"","name":"buy_a","type_":"bool"},{"doc":"","name":"out","type_":"i128"},{"doc":"","name":"in_max","type_":"i128"}],"outputs":[]}}"#,
            r#"{"function_v0":{"doc":"","name":"withdraw","inputs":[{"doc":"","name":"to","type_":"address"},{"doc":"","name":"share_amount","type_":"i128"},{"doc":"","name":"min_a","type_":"i128"},{"doc":"","name":"min_b","type_":"i128"}],"outputs":[{"tuple":{"value_types":["i128","i128"]}}]}}"#,
            r#"{"function_v0":{"doc":"","name":"get_rsrvs","inputs":[],"outputs":[{"tuple":{"value_types":["i128","i128"]}}]}}"#
            ].iter().map(ToString::to_string).collect::<Vec<String>>()),
    );
}

#[cfg_attr(target_arch = "wasm32", wasm_bindgen_test)]
#[test]
fn decode_length_limit_protection() {
    assert_eq!(
        stellar_xdr_json::decode(
            "ScMetaV0".to_string(),
            "AAAAAgAAAADgEZSKvj9N4hWo7xlEDhSTfZRRnmodlACjhT0/BweuyQAAAGUB/G2bAC33IQAAAAEAAAAAAAAAAAAAAABmzOtiAAAAAAAAAAEAAAAAAAAADAAAAAAAAAABVEZDAAAAAADlu40gByuPMTgEkGkhjz5+CDc95FS7T+ywnU7hWCVE1QAAAABpKduDAADRYQCYloAAAAAAXqLzMgAAAAAAAAABBweuyQAAAEC6TCDlbRpjth9ySEI2QiZ2s4CqERXVRvQC45SGPsO16sfQoNwbvBr1C3K9Cu5De/QdPpBQedwArheCWreq2KMJ".to_string(),
        ),
        Err("length limit exceeded".to_string()),
    );
}

#[cfg_attr(target_arch = "wasm32", wasm_bindgen_test)]
#[test]
fn guess() {
    assert_eq!(
        stellar_xdr_json::guess("AAAAAgAAAADgEZSKvj9N4hWo7xlEDhSTfZRRnmodlACjhT0/BweuyQAAAGUB/G2bAC33IQAAAAEAAAAAAAAAAAAAAABmzOtiAAAAAAAAAAEAAAAAAAAADAAAAAAAAAABVEZDAAAAAADlu40gByuPMTgEkGkhjz5+CDc95FS7T+ywnU7hWCVE1QAAAABpKduDAADRYQCYloAAAAAAXqLzMgAAAAAAAAABBweuyQAAAEC6TCDlbRpjth9ySEI2QiZ2s4CqERXVRvQC45SGPsO16sfQoNwbvBr1C3K9Cu5De/QdPpBQedwArheCWreq2KMJ".to_string()),
        &[
            "FeeBumpTransactionInnerTx",
            "TransactionEnvelope",
        ],
    );
}
